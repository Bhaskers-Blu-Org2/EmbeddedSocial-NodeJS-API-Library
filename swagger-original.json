{"swagger":"2.0","info":{"version":"v0_4","title":"Microsoft Research Embedded Social Service","description":"The Embedded Social interface to clients is a RESTful API which is documented here.","termsOfService":"ToS TBD","contact":{"name":"Embedded Social Team","email":"socialplusops@microsoft.com"},"license":{"name":"MIT License","url":"https://opensource.org/licenses/MIT"}},"host":"api.embeddedsocial.microsoft.com","schemes":["https"],"paths":{"/v0.4/blobs":{"post":{"tags":["Blobs"],"summary":"Upload a blob","description":"If your blob is an image, use image APIs. For all other blob types, use this API.","operationId":"Blobs_PostBlob","consumes":["application/octet-stream"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"},{"name":"blob","in":"body","description":"MIME encoded contents of the blob","required":true,"schema":{"format":"file","type":"file"}}],"responses":{"201":{"description":"Created. The response contains the blob handle.","schema":{"$ref":"#/definitions/PostBlobResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/blobs/{blobHandle}":{"get":{"tags":["Blobs"],"summary":"Get blob","operationId":"Blobs_GetBlob","consumes":[],"produces":["application/octet-stream"],"parameters":[{"name":"blobHandle","in":"path","description":"Blob handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"description":"MIME encoded contents of the blob","type":"file"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The blob is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/builds/current":{"get":{"tags":["Builds"],"summary":"The build information for this service","description":"This API is meant to be called by humans for debugging","operationId":"Builds_GetBuildsCurrent","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"success","schema":{"$ref":"#/definitions/BuildsCurrentResponse"}}},"deprecated":false}},"/v0.4/comments/{commentHandle}":{"get":{"tags":["Comments"],"summary":"Get comment","operationId":"Comments_GetComment","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/CommentView"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"delete":{"tags":["Comments"],"summary":"Delete comment","operationId":"Comments_DeleteComment","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/{topicHandle}/comments":{"get":{"tags":["Comments"],"summary":"Get comments for a topic","operationId":"TopicComments_GetTopicComments","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[CommentView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Comments"],"summary":"Create a new comment","operationId":"TopicComments_PostComment","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"request","in":"body","description":"Post comment request","required":true,"schema":{"$ref":"#/definitions/PostCommentRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"201":{"description":"Created. The response contains the comment handle.","schema":{"$ref":"#/definitions/PostCommentResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/hashtags/trending":{"get":{"tags":["Hashtags"],"summary":"Get trending hashtags","operationId":"Hashtags_GetTrendingHashtags","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app or user is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/hashtags/autocomplete":{"get":{"tags":["Hashtags"],"summary":"Get autocompleted hashtags","operationId":"Hashtags_GetAutocompletedHashtags","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"query","in":"query","description":"Search query","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app or user is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/images/{imageType}":{"post":{"tags":["Images"],"summary":"Upload a new image","description":"Images will be resized. To access a resized image, append the 1 character size identifier to the blobHandle that is returned.\r\n            \r\n             - d is 25 pixels wide\r\n             - h is 50 pixels wide\r\n             - l is 100 pixels wide\r\n             - p is 250 pixels wide\r\n             - t is 500 pixels wide\r\n             - x is 1000 pixels wide\r\n            \r\n             - ImageType.UserPhoto supports d,h,l,p,t,x\r\n             - ImageType.ContentBlob supports d,h,l,p,t,x\r\n             - ImageType.AppIcon supports l\r\n            \r\n             All resized images will maintain their aspect ratio. Any orientation specified in the EXIF headers will be honored.","operationId":"Images_PostImage","consumes":["image/gif","image/jpeg","image/png"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"imageType","in":"path","description":"Image type","required":true,"type":"string","enum":["UserPhoto","ContentBlob","AppIcon"]},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"},{"name":"image","in":"body","description":"MIME encoded contents of the image","required":true,"schema":{"format":"file","type":"file"}}],"responses":{"201":{"description":"Created. The response contains the image handle.","schema":{"$ref":"#/definitions/PostImageResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/images/{blobHandle}":{"get":{"tags":["Images"],"summary":"Get image","operationId":"Images_GetImage","consumes":[],"produces":["image/gif","image/jpeg","image/png"],"parameters":[{"name":"blobHandle","in":"path","description":"Blob handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"description":"MIME encoded contents of the image","type":"file"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The image is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/{topicHandle}/likes":{"get":{"tags":["Likes"],"summary":"Get likes for topic","operationId":"TopicLikes_GetLikes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Likes"],"summary":"Add like to topic","operationId":"TopicLikes_PostLike","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/{topicHandle}/likes/me":{"delete":{"tags":["Likes"],"summary":"Remove like from topic","operationId":"TopicLikes_DeleteLike","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/replies/{replyHandle}/likes":{"get":{"tags":["Likes"],"summary":"Get likes for reply","operationId":"ReplyLikes_GetLikes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"replyHandle","in":"path","description":"Reply handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The reply is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Likes"],"summary":"Add like to reply","operationId":"ReplyLikes_PostLike","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"replyHandle","in":"path","description":"Reply handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The reply is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/replies/{replyHandle}/likes/me":{"delete":{"tags":["Likes"],"summary":"Remove like from reply","operationId":"ReplyLikes_DeleteLike","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"replyHandle","in":"path","description":"Reply handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The reply is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/comments/{commentHandle}/likes":{"get":{"tags":["Likes"],"summary":"Get likes for comment","operationId":"CommentLikes_GetLikes","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Likes"],"summary":"Add like to comment","operationId":"CommentLikes_PostLike","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/comments/{commentHandle}/likes/me":{"delete":{"tags":["Likes"],"summary":"Remove like from comment","operationId":"CommentLikes_DeleteLike","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/notifications/status":{"put":{"tags":["Notifications"],"summary":"Update notifications status","description":"This API call records the most recent notification that the user has read (or seen).\r\n            In the GET notifications API call, each notification will have an unread status.\r\n            Any notifications that are newer than this ReadActivityHandle will have an unread status of true.\r\n            Any notifications that correspond to this ReadActivityHandle or older will have an unread status of false.\r\n            If this API call has never been made, then all notifications will have an unread status of true.","operationId":"MyNotifications_PutNotificationsStatus","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Put notifications status request","required":true,"schema":{"$ref":"#/definitions/PutNotificationsStatusRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/notifications":{"get":{"tags":["Notifications"],"summary":"Get my notifications","description":"This gets a feed of activities.\r\n            This feed is time ordered, with the most recent activity first.\r\n            An activity is added to this feed when any user other than myself does one of the following 6 actions:\r\n            (a) creates a comment to my topic; (b) creates a reply to my comment; (c) likes my topic; (d) follows me;\r\n            (e) requests to follow me when I'm a private user; (f) accepts my request to follow them when they are a private user.\r\n            Each activity has an unread status, which is controlled by doing a PUT on the status API call.\r\n            If a user that performed the activity is deleted, then that activity will no longer appear in this feed.\r\n            If an activity is performed on content that is then deleted, that activity will no longer appear in this feed.\r\n            If a user has un-done an activity (e.g. unlike a previous like), then that activity will no longer appear in this feed.","operationId":"MyNotifications_GetNotifications","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[ActivityView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app or user is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/notifications/count":{"get":{"tags":["Notifications"],"summary":"Get unread notifications count","description":"This returns a count of activities in my notification feed that have an unread status of true.","operationId":"MyNotifications_GetNotificationsCount","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/CountResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app or user is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/pins":{"get":{"tags":["Pins"],"summary":"Get my pins","operationId":"MyPins_GetPins","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Pins"],"summary":"Pin a topic","operationId":"MyPins_PostPin","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post pin request","required":true,"schema":{"$ref":"#/definitions/PostPinRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/pins/{topicHandle}":{"delete":{"tags":["Pins"],"summary":"Unpin a topic","operationId":"MyPins_DeletePin","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/push_registrations/{platform}/{registrationId}":{"put":{"tags":["Push Notifications"],"summary":"Register for push notifications or update an existing registration","description":"A push notification will be generated and sent for each activity in my\r\n            notifications feed where the unread status is true.\r\n            If multiple devices register for push notifications, then all those devices\r\n            will get push notifications.","operationId":"MyPushRegistrations_PutPushRegistration","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"platform","in":"path","description":"Platform type","required":true,"type":"string","enum":["Windows","Android","IOS"]},{"name":"registrationId","in":"path","description":"Unique registration ID provided by the mobile OS.\r\n            You must URL encode the registration ID.\r\n            For Android, this is the GCM registration ID.\r\n            For Windows, this is the PushNotificationChannel URI.\r\n            For iOS, this is the device token.","required":true,"type":"string"},{"name":"request","in":"body","description":"Put push registration request","required":true,"schema":{"$ref":"#/definitions/PutPushRegistrationRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"401":{"description":"Unauthorized. The user or the app is not authorized."},"409":{"description":"Conflict. LastUpdatedTime is in the future."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"delete":{"tags":["Push Notifications"],"summary":"Unregister from push notifications","operationId":"MyPushRegistrations_DeletePushRegistration","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"platform","in":"path","description":"Platform type","required":true,"type":"string","enum":["Windows","Android","IOS"]},{"name":"registrationId","in":"path","description":"Unique registration ID provided by the mobile OS.\r\n            You must URL encode the registration ID.\r\n            For Android, this is the GCM registration ID.\r\n            For Windows, this is the PushNotificationChannel URI.\r\n            For iOS, this is the device token.","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The push registrationId was not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/replies/{replyHandle}":{"get":{"tags":["Replies"],"summary":"Get reply","operationId":"Replies_GetReply","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"replyHandle","in":"path","description":"Reply handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/ReplyView"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The reply is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"delete":{"tags":["Replies"],"summary":"Delete reply","operationId":"Replies_DeleteReply","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"replyHandle","in":"path","description":"Reply handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The reply is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/comments/{commentHandle}/replies":{"get":{"tags":["Replies"],"summary":"Get replies for a comment","operationId":"CommentReplies_GetReplies","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[ReplyView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Replies"],"summary":"Create a new reply","operationId":"CommentReplies_PostReply","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle","required":true,"type":"string"},{"name":"request","in":"body","description":"Post reply request","required":true,"schema":{"$ref":"#/definitions/PostReplyRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"201":{"description":"Created. The response contains the reply handle.","schema":{"$ref":"#/definitions/PostReplyResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The comment is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/{userHandle}/reports":{"post":{"tags":["Reporting"],"summary":"Report a user as spam, offensive, etc.","description":"This call allows a user to complain about another user's profile content\r\n            (photo, bio, name) as containing spam, offensive material, etc.","operationId":"UserReports_PostReport","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle being reported on","required":true,"type":"string"},{"name":"postReportRequest","in":"body","description":"Post report request","required":true,"schema":{"$ref":"#/definitions/PostReportRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user is not authorized to make this request."},"404":{"description":"Not Found. The user being reported on is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/{topicHandle}/reports":{"post":{"tags":["Reporting"],"summary":"Report a topic as spam, offensive, etc.","operationId":"TopicReports_PostReport","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle being reported on","required":true,"type":"string"},{"name":"postReportRequest","in":"body","description":"Post report request","required":true,"schema":{"$ref":"#/definitions/PostReportRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized to make this request."},"404":{"description":"Not Found. The topic being reported on is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/replies/{replyHandle}/reports":{"post":{"tags":["Reporting"],"summary":"Report a reply as spam, offensive, etc.","operationId":"ReplyReports_PostReport","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"replyHandle","in":"path","description":"Reply handle for the reply being reported on","required":true,"type":"string"},{"name":"postReportRequest","in":"body","description":"Post report request","required":true,"schema":{"$ref":"#/definitions/PostReportRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized to make this request."},"404":{"description":"Not Found. The reply being reported on is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/comments/{commentHandle}/reports":{"post":{"tags":["Reporting"],"summary":"Report a comment as spam, offensive, etc.","operationId":"CommentReports_PostReport","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"commentHandle","in":"path","description":"Comment handle for the comment being reported on","required":true,"type":"string"},{"name":"postReportRequest","in":"body","description":"Post report request","required":true,"schema":{"$ref":"#/definitions/PostReportRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized to make this request."},"404":{"description":"Not Found. The comment being reported on is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/search/topics":{"get":{"tags":["Search"],"summary":"Search topics with a query","description":"The query string will be searched across hashtags, topic titles, and topic texts,\r\n             and matching results will be returned.\r\n            \r\n             If the query string contains only hashtags, e.g. #foo #bar, then only the hashtags\r\n             in topics will be searched.\r\n            \r\n             Query string supports the following operators:\r\n             - suffix: \"foo*\"\r\n             - and: \"foo+bar\"\r\n             - or: \"foo|bar\"\r\n             - not: \"-foo\"\r\n             - phrase: \"\"foo bar\"\"\r\n             - precedence: \"foo+(bar|baz)\"\r\n             You need to escape * if it is at the end of a word, and - if it is at the start of a word.\r\n             Default behavior is to use and, so if you use whitespace to separate words,\r\n             such as \"foo bar\", that is equivalent to \"foo+bar\".","operationId":"Search_GetTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"query","in":"query","description":"Search query","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app or user is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/search/users":{"get":{"tags":["Search"],"summary":"Search users with a query","description":"The query string will be searched across the full name of users\r\n             and matching results will be returned.\r\n            \r\n             Query string supports the following operators:\r\n             - suffix: \"foo*\"\r\n             - and: \"foo+bar\"\r\n             - or: \"foo|bar\"\r\n             - not: \"-foo\"\r\n             - phrase: \"\"foo bar\"\"\r\n             - precedence: \"foo+(bar|baz)\"\r\n             You need to escape * if it is at the end of a word, and - if it is at the start of a word.\r\n             Default behavior is to use and, so if you use whitespace to separate words,\r\n             such as \"foo bar\", that is equivalent to \"foo+bar\".","operationId":"Search_GetUsers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"query","in":"query","description":"Search query","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app or user is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/sessions":{"post":{"tags":["Sessions"],"summary":"Create a new session (sign in)","operationId":"Sessions_PostSession","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post session request","required":true,"schema":{"$ref":"#/definitions/PostSessionRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"201":{"description":"Created. The response contains user handle and session token.","schema":{"$ref":"#/definitions/PostSessionResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found. The app needs to call create user to create a new user."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/sessions/current":{"delete":{"tags":["Sessions"],"summary":"Delete the current session (sign out)","operationId":"Sessions_DeleteSession","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/request_tokens/{identityProvider}":{"get":{"tags":["Sessions"],"summary":"Get request token","operationId":"RequestTokens_GetRequestToken","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"identityProvider","in":"path","description":"Identity provider type","required":true,"type":"string","enum":["Facebook","Microsoft","Google","Twitter","Beihai"]},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/GetRequestTokenResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/{userHandle}/followers":{"get":{"tags":["Social"],"summary":"Get followers of a user","operationId":"UserFollowers_GetFollowers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The user is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/pending_users/{userHandle}":{"delete":{"tags":["Social"],"summary":"Reject follower request","operationId":"MyPendingUsers_DeletePendingUser","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/pending_users":{"get":{"tags":["Social"],"summary":"Get my pending users","operationId":"MyPendingUsers_GetPendingUsers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/pending_users/count":{"get":{"tags":["Social"],"summary":"Get my pending users count","operationId":"MyPendingUsers_GetPendingUsersCount","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/CountResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/followers":{"get":{"tags":["Social"],"summary":"Get my followers","operationId":"MyFollowers_GetFollowers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Social"],"summary":"Accept follower request","operationId":"MyFollowers_PostFollower","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post follower request","required":true,"schema":{"$ref":"#/definitions/PostFollowerRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"403":{"description":"Forbidden. The request cannot be performed."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/followers/{userHandle}":{"delete":{"tags":["Social"],"summary":"Remove follower","operationId":"MyFollowers_DeleteFollower","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/following":{"get":{"tags":["Social"],"summary":"Get the feed of users that I am following","operationId":"MyFollowing_GetFollowing","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Social"],"summary":"Follow a user","operationId":"MyFollowing_PostFollowing","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post following request","required":true,"schema":{"$ref":"#/definitions/PostFollowingRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/following/{userHandle}":{"delete":{"tags":["Social"],"summary":"Unfollow a user","operationId":"MyFollowing_DeleteFollowing","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/following/topics/{topicHandle}":{"delete":{"tags":["Social"],"summary":"Remove a topic from the feed of topics authored by users that I'm following","description":"My following topics feed is a feed of topics created by users that I am following.\r\n            This API call will remove the specified topic from that feed.","operationId":"MyFollowing_DeleteTopic","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/following/topics":{"get":{"tags":["Social"],"summary":"Get the feed of topics authored by users that I'm following","description":"My following topics feed is a list of topics posted by users that I am following.\r\n            This feed is time ordered, with the most recent topic first.\r\n            This feed will not include topics that I have explicitly deleted from this feed.\r\n            When I follow a user, all of their past topics will be added to this feed, and all their\r\n            future topics will be added to this feed when they are created.\r\n            When I unfollow a user, all of their previous topics will be removed from the feed and\r\n            none of their future topics will be added to this feed.","operationId":"MyFollowing_GetTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/following/activities":{"get":{"tags":["Social"],"summary":"Get the feed of activities by users that I'm following.","description":"My following activity feed is a list of activities performed by users that I am following.\r\n            This feed is time ordered, with the most recent activity first.\r\n            An activity is added to this feed when a user I am following does one of the following 4 actions:\r\n            (a) create a comment; (b) create a reply; (c) like a topic; (d) follow a user.\r\n            If a user that I am following is deleted, then their past activities will no longer appear in this feed.\r\n            If an activity is performed on content that is then deleted, that activity will no longer appear in this feed.\r\n            If a user has un-done an activity (e.g. unlike a previous like), then that activity will no longer appear in this feed.\r\n            Ignore the unread status of each activity - it will always be true.","operationId":"MyFollowing_GetActivities","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[ActivityView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/blocked_users":{"get":{"tags":["Social"],"summary":"Get my blocked users","operationId":"MyBlockedUsers_GetBlockedUsers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Social"],"summary":"Block user","operationId":"MyBlockedUsers_PostBlockedUser","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post blocked user request","required":true,"schema":{"$ref":"#/definitions/PostBlockedUserRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/blocked_users/{userHandle}":{"delete":{"tags":["Social"],"summary":"Unblock user","operationId":"MyBlockedUsers_DeleteBlockedUser","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/{userHandle}/following":{"get":{"tags":["Social"],"summary":"Get following users of a user","operationId":"UserFollowing_GetFollowing","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The user is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics":{"get":{"tags":["Topics"],"summary":"Get recent topics","operationId":"Topics_GetTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Topics"],"summary":"Create a new topic","operationId":"Topics_PostTopic","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post topic request","required":true,"schema":{"$ref":"#/definitions/PostTopicRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"201":{"description":"Created. The response contains the topic handle.","schema":{"$ref":"#/definitions/PostTopicResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."},"501":{"description":"Not implemented. The server is yet to implement this feature."}},"deprecated":false}},"/v0.4/topics/{topicHandle}":{"get":{"tags":["Topics"],"summary":"Get topic","operationId":"Topics_GetTopic","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/TopicView"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"put":{"tags":["Topics"],"summary":"Update topic","operationId":"Topics_PutTopic","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"request","in":"body","description":"Put topic request","required":true,"schema":{"$ref":"#/definitions/PutTopicRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"409":{"description":"Conflict. Newer item exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"delete":{"tags":["Topics"],"summary":"Delete topic","operationId":"Topics_DeleteTopic","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicHandle","in":"path","description":"Topic handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/popular/{timeRange}":{"get":{"tags":["Topics"],"summary":"Get popular topics today","operationId":"Topics_GetPopularTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"timeRange","in":"path","description":"Time range","required":true,"type":"string","enum":["Today","ThisWeek","ThisMonth","AllTime"]},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/featured":{"get":{"tags":["Topics"],"summary":"Get featured topics","operationId":"Topics_GetFeaturedTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/topics/names":{"post":{"tags":["Topics"],"summary":"Create a topic name","operationId":"Topics_PostTopicName","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post topic name request","required":true,"schema":{"$ref":"#/definitions/PostTopicNameRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic is not found."},"409":{"description":"Conflict. Item already exists."},"501":{"description":"Not implemented. This feature is not implemented."}},"deprecated":false}},"/v0.4/topics/names/{topicName}":{"get":{"tags":["Topics"],"summary":"Get a topic name","operationId":"Topics_GetTopicName","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicName","in":"path","description":"Topic name","required":true,"type":"string"},{"name":"publisherType","in":"query","description":"Publisher type","required":true,"type":"string","enum":["User","App"]},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/GetTopicNameResponse"}},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic name is not found."},"501":{"description":"Not implemented. This feature is not implemented."}},"deprecated":false},"put":{"tags":["Topics"],"summary":"Update a topic name","operationId":"Topics_PutTopicName","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicName","in":"path","description":"Topic name","required":true,"type":"string"},{"name":"request","in":"body","description":"Update topic name request","required":true,"schema":{"$ref":"#/definitions/PutTopicNameRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic or topic name is not found."},"501":{"description":"Not implemented. This feature is not implemented."}},"deprecated":false},"delete":{"tags":["Topics"],"summary":"Delete a topic name","operationId":"Topics_DeleteTopicName","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"topicName","in":"path","description":"Topic name","required":true,"type":"string"},{"name":"request","in":"body","description":"Delete topic request","required":true,"schema":{"$ref":"#/definitions/DeleteTopicNameRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The topic name is not found."},"501":{"description":"Not implemented. This feature is not implemented."}},"deprecated":false}},"/v0.4/users/me/topics":{"get":{"tags":["Users"],"summary":"Get my topics sorted by creation time","operationId":"MyTopics_GetTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/topics/popular":{"get":{"tags":["Users"],"summary":"Get my topics sorted by popularity","operationId":"MyTopics_GetPopularTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/apps/{appHandle}/following/difference":{"get":{"tags":["Users"],"summary":"Find users the current user is following in another app but not in the current app","operationId":"MyAppFollowing_GetUsers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appHandle","in":"path","description":"App handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserCompactView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/apps":{"get":{"tags":["Users"],"summary":"Get my list of Social Plus apps","operationId":"MyApps_GetApps","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"type":"array","items":{"$ref":"#/definitions/AppCompactView"}}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/likes/topics":{"get":{"tags":["Users"],"summary":"Get my liked topics","operationId":"MyLikes_GetLikedTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/linked_accounts":{"get":{"tags":["Users"],"summary":"Get linked accounts","operationId":"MyLinkedAccounts_GetLinkedAccounts","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"type":"array","items":{"$ref":"#/definitions/LinkedAccountView"}}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"post":{"tags":["Users"],"summary":"Create a new linked account","operationId":"MyLinkedAccounts_PostLinkedAccount","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post linked account request","required":true,"schema":{"$ref":"#/definitions/PostLinkedAccountRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"409":{"description":"Conflict. Item already exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/linked_accounts/{identityProvider}":{"delete":{"tags":["Users"],"summary":"Delete linked account","operationId":"MyLinkedAccounts_DeleteLinkedAccount","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"identityProvider","in":"path","description":"Identity provider type","required":true,"type":"string","enum":["Facebook","Microsoft","Google","Twitter","Beihai"]},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"403":{"description":"Forbidden. The request cannot be performed."},"404":{"description":"Not Found. The linked account is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users":{"post":{"tags":["Users"],"summary":"Create a new user","description":"Create a new user using the following flow:\r\n            \r\n             1. Validate and parse the identity provider access token to construct an identity provider user\r\n            \r\n             2. If the identity provider user is present in the linked account table, read the user profile for this\r\n             specific application from the user profile table\r\n            \r\n             3.    If the user profile already exists, return user conflict\r\n            \r\n             4.    Otherwise, the user does not already have a profile for this particular application, so we create one.\r\n            \r\n             5. Otherwise, the identity provider user is not present. Create the user, and the corresponding user profile.\r\n            \r\n             6. Generate session token, and return\r\n            \r\n             The purpose of steps 2-4 is to ensure that if the user has already registered with us using the same identity\r\n             provider but for a different SocialPlus application, we reuse his user-handle and just create a new profile for\r\n             this specific SocialPlus application. The end result is that we know it is the same user in both apps.","operationId":"Users_PostUser","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Post user request","required":true,"schema":{"$ref":"#/definitions/PostUserRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"201":{"description":"Created. The response contains user handle and session token.","schema":{"$ref":"#/definitions/PostUserResponse"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"409":{"description":"Conflict. Item already exists."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me":{"get":{"tags":["Users"],"summary":"Get my profile","operationId":"Users_GetMyProfile","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/UserProfileView"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false},"delete":{"tags":["Users"],"summary":"Delete user","operationId":"Users_DeleteUser","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/info":{"put":{"tags":["Users"],"summary":"Update user info","operationId":"Users_PutUserInfo","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Put user info request","required":true,"schema":{"$ref":"#/definitions/PutUserInfoRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/photo":{"put":{"tags":["Users"],"summary":"Update user photo","operationId":"Users_PutUserPhoto","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Put user photo request","required":true,"schema":{"$ref":"#/definitions/PutUserPhotoRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/me/visibility":{"put":{"tags":["Users"],"summary":"Update user visibility","operationId":"Users_PutUserVisibility","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Put user visibility request","required":true,"schema":{"$ref":"#/definitions/PutUserVisibilityRequest"}},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":true,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"204":{"description":"No Content. The request was successful.","schema":{"$ref":"#/definitions/Object"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/{userHandle}":{"get":{"tags":["Users"],"summary":"Get user profile","operationId":"Users_GetUser","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/UserProfileView"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"404":{"description":"Not Found. The user is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/popular":{"get":{"tags":["Users"],"summary":"Get popular users","operationId":"Users_GetPopularUsers","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[UserProfileView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The user or the app is not authorized."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/{userHandle}/topics":{"get":{"tags":["Users"],"summary":"Get user topics sorted by creation time","operationId":"UserTopics_GetTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"string"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The user is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}},"/v0.4/users/{userHandle}/topics/popular":{"get":{"tags":["Users"],"summary":"Get user topics sorted by popularity","operationId":"UserTopics_GetPopularTopics","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"userHandle","in":"path","description":"User handle","required":true,"type":"string"},{"name":"cursor","in":"query","description":"Current read cursor","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Number of items to return","required":false,"type":"integer","format":"int32"},{"name":"appkey","in":"header","description":"App key must be filled in when using AAD tokens for Authentication.","required":false,"type":"string"},{"name":"Authorization","in":"header","description":"Authentication (must begin with string \"Bearer \"). Possible values are:\n\n-sessionToken for client auth\n\n-AAD token for service auth","required":false,"type":"string"},{"name":"UserHandle","in":"header","description":"This field is for internal use only. Do not provide a value except under special circumstances.","required":false,"type":"string"}],"responses":{"200":{"description":"OK. The request was successful.","schema":{"$ref":"#/definitions/FeedResponse[TopicView]"}},"400":{"description":"Bad request. The request is invalid."},"401":{"description":"Unauthorized. The app is not authorized."},"404":{"description":"Not Found. The user is not found."},"500":{"description":"Internal Server Error. The server raised an exception."}},"deprecated":false}}},"definitions":{"PostBlobResponse":{"description":"Response from post (create) blob","required":["blobHandle"],"type":"object","properties":{"blobHandle":{"description":"Gets or sets blob handle","type":"string"}}},"Object":{"type":"object","properties":{}},"BuildsCurrentResponse":{"description":"Response from get builds current","type":"object","properties":{"dateAndTime":{"description":"Gets or sets the date and time of the current build","type":"string"},"commitHash":{"description":"Gets or sets the Git commit hash that represents the current checkout","type":"string"},"hostname":{"description":"Gets or sets the hostname that this code was built on","type":"string"},"serviceApiVersion":{"description":"Gets or sets service api version number","type":"string"},"dirtyFiles":{"description":"Gets or sets the list of files that were not committed at build time","type":"array","items":{"type":"string"}}}},"CommentView":{"description":"Comment view","required":["commentHandle","topicHandle","createdTime","lastUpdatedTime","user","text","totalLikes","totalReplies","liked"],"type":"object","properties":{"commentHandle":{"description":"Gets or sets comment handle","type":"string"},"topicHandle":{"description":"Gets or sets parent topic handle","type":"string"},"createdTime":{"format":"date-time","description":"Gets or sets created time","type":"string"},"lastUpdatedTime":{"format":"date-time","description":"Gets or sets last updated time","type":"string"},"user":{"$ref":"#/definitions/UserCompactView","description":"Gets or sets owner of the comment"},"text":{"description":"Gets or sets comment text","type":"string"},"blobType":{"description":"Gets or sets comment blob type","enum":["Unknown","Image","Video","Custom"],"type":"string"},"blobHandle":{"description":"Gets or sets comment blob handle","type":"string"},"blobUrl":{"description":"Gets or sets comment blob url","type":"string"},"language":{"description":"Gets or sets comment language","type":"string"},"totalLikes":{"format":"int64","description":"Gets or sets total likes for the comment","type":"integer"},"totalReplies":{"format":"int64","description":"Gets or sets total replies for the comment","type":"integer"},"liked":{"description":"Gets or sets a value indicating whether the querying user has liked the comment","type":"boolean"},"contentStatus":{"description":"Gets or sets content status","enum":["Active","Banned","Mature","Clean"],"type":"string"}}},"UserCompactView":{"description":"User compact view","required":["userHandle","firstName","lastName","visibility","followerStatus"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"},"firstName":{"description":"Gets or sets first name of the user","type":"string"},"lastName":{"description":"Gets or sets last name of the user","type":"string"},"photoHandle":{"description":"Gets or sets photo handle of the user","type":"string"},"photoUrl":{"description":"Gets or sets photo url of the user","type":"string"},"visibility":{"description":"Gets or sets visibility of the user","enum":["Public","Private"],"type":"string"},"followerStatus":{"description":"Gets or sets follower relationship status of the querying user","enum":["None","Follow","Pending","Blocked"],"type":"string"}}},"PostCommentRequest":{"description":"Request to post (create) comment","required":["text"],"type":"object","properties":{"text":{"description":"Gets or sets comment text","type":"string"},"blobType":{"description":"Gets or sets comment blob type","enum":["Unknown","Image","Video","Custom"],"type":"string"},"blobHandle":{"description":"Gets or sets comment blob handle","type":"string"},"language":{"description":"Gets or sets comment language","type":"string"}}},"PostCommentResponse":{"description":"Response from post (create) comment","required":["commentHandle"],"type":"object","properties":{"commentHandle":{"description":"Gets or sets comment handle of the comment","type":"string"}}},"FeedResponse[CommentView]":{"description":"Feed response","required":["data","cursor"],"type":"object","properties":{"data":{"description":"Gets or sets feed data","type":"array","items":{"$ref":"#/definitions/CommentView"}},"cursor":{"description":"Gets or sets feed cursor","type":"string"}}},"PostImageResponse":{"description":"Response from post (create) image","required":["blobHandle"],"type":"object","properties":{"blobHandle":{"description":"Gets or sets blob handle","type":"string"}}},"FeedResponse[UserCompactView]":{"description":"Feed response","required":["data","cursor"],"type":"object","properties":{"data":{"description":"Gets or sets feed data","type":"array","items":{"$ref":"#/definitions/UserCompactView"}},"cursor":{"description":"Gets or sets feed cursor","type":"string"}}},"PutNotificationsStatusRequest":{"description":"Request to put (update) notifications status","type":"object","properties":{"readActivityHandle":{"description":"Gets or sets last read activity handle","type":"string"}}},"FeedResponse[ActivityView]":{"description":"Feed response","required":["data","cursor"],"type":"object","properties":{"data":{"description":"Gets or sets feed data","type":"array","items":{"$ref":"#/definitions/ActivityView"}},"cursor":{"description":"Gets or sets feed cursor","type":"string"}}},"ActivityView":{"description":"Activity view","required":["activityHandle","createdTime","activityType","actorUsers","totalActions","unread"],"type":"object","properties":{"activityHandle":{"description":"Gets or sets activity handle","type":"string"},"createdTime":{"format":"date-time","description":"Gets or sets created time","type":"string"},"activityType":{"description":"Gets or sets activity type","enum":["Like","Comment","Reply","CommentPeer","ReplyPeer","Following","FollowRequest","FollowAccept"],"type":"string"},"actorUsers":{"description":"Gets or sets actor users","type":"array","items":{"$ref":"#/definitions/UserCompactView"}},"actedOnUser":{"$ref":"#/definitions/UserCompactView","description":"Gets or sets acted on user"},"actedOnContent":{"$ref":"#/definitions/ContentCompactView","description":"Gets or sets acted on content"},"totalActions":{"format":"int32","description":"Gets or sets total actions","type":"integer"},"unread":{"description":"Gets or sets a value indicating whether the activity was read","type":"boolean"},"app":{"$ref":"#/definitions/AppCompactView","description":"Gets or sets the containing app"}}},"ContentCompactView":{"description":"Content compact view","required":["contentType","contentHandle","text"],"type":"object","properties":{"contentType":{"description":"Gets or sets content type","enum":["Unknown","Topic","Comment","Reply"],"type":"string"},"contentHandle":{"description":"Gets or sets content handle","type":"string"},"parentHandle":{"description":"Gets or sets parent handle","type":"string"},"rootHandle":{"description":"Gets or sets root handle","type":"string"},"text":{"description":"Gets or sets content text","type":"string"},"blobType":{"description":"Gets or sets content blob type","enum":["Unknown","Image","Video","Custom"],"type":"string"},"blobHandle":{"description":"Gets or sets content blob handle","type":"string"},"blobUrl":{"description":"Gets or sets content blob url","type":"string"}}},"AppCompactView":{"description":"App compact view","required":["appHandle","name","platformType"],"type":"object","properties":{"appHandle":{"description":"Gets or sets app handle","type":"string"},"name":{"description":"Gets or sets app name","type":"string"},"iconHandle":{"description":"Gets or sets app icon handle","type":"string"},"iconUrl":{"description":"Gets or sets app icon url","type":"string"},"platformType":{"description":"Gets or sets platform type","enum":["Windows","Android","IOS"],"type":"string"},"deepLink":{"description":"Gets or sets app deep link","type":"string"},"storeLink":{"description":"Gets or sets app store link","type":"string"}}},"CountResponse":{"description":"Count response","required":["count"],"type":"object","properties":{"count":{"format":"int64","description":"Gets or sets count","type":"integer"}}},"PostPinRequest":{"description":"Request to post (create) a pin","required":["topicHandle"],"type":"object","properties":{"topicHandle":{"description":"Gets or sets topic handle","type":"string"}}},"FeedResponse[TopicView]":{"description":"Feed response","required":["data","cursor"],"type":"object","properties":{"data":{"description":"Gets or sets feed data","type":"array","items":{"$ref":"#/definitions/TopicView"}},"cursor":{"description":"Gets or sets feed cursor","type":"string"}}},"TopicView":{"description":"Topic view","required":["topicHandle","createdTime","lastUpdatedTime","publisherType","text","totalLikes","totalComments","liked"],"type":"object","properties":{"topicHandle":{"description":"Gets or sets topic handle","type":"string"},"createdTime":{"format":"date-time","description":"Gets or sets created time","type":"string"},"lastUpdatedTime":{"format":"date-time","description":"Gets or sets last updated time","type":"string"},"publisherType":{"description":"Gets or sets publisher type","enum":["User","App"],"type":"string"},"user":{"$ref":"#/definitions/UserCompactView","description":"Gets or sets owner of the topic"},"title":{"description":"Gets or sets topic title","type":"string"},"text":{"description":"Gets or sets topic text","type":"string"},"blobType":{"description":"Gets or sets topic blob type","enum":["Unknown","Image","Video","Custom"],"type":"string"},"blobHandle":{"description":"Gets or sets topic blob handle","type":"string"},"blobUrl":{"description":"Gets or sets topic blob url","type":"string"},"categories":{"description":"Gets or sets topic categories","type":"string"},"language":{"description":"Gets or sets topic language","type":"string"},"group":{"description":"Gets or sets topic group","type":"string"},"deepLink":{"description":"Gets or sets topic deep link","type":"string"},"friendlyName":{"description":"Gets or sets topic friendly name","type":"string"},"totalLikes":{"format":"int64","description":"Gets or sets total likes for the topic","type":"integer"},"totalComments":{"format":"int64","description":"Gets or sets total comments for the topic","type":"integer"},"liked":{"description":"Gets or sets a value indicating whether the querying user has liked the topic","type":"boolean"},"pinned":{"description":"Gets or sets a value indicating whether the querying user has pinned the topic","type":"boolean"},"contentStatus":{"description":"Gets or sets content status","enum":["Active","Banned","Mature","Clean"],"type":"string"},"app":{"$ref":"#/definitions/AppCompactView","description":"Gets or sets the containing app"}}},"PutPushRegistrationRequest":{"description":"Request to put push registration (register or update)","required":["lastUpdatedTime","language"],"type":"object","properties":{"lastUpdatedTime":{"format":"date-time","description":"Gets or sets last updated time from the OS\r\n            This is used to expire out registrations that have not been updated every 30 days.","type":"string"},"language":{"description":"Gets or sets language of the user","type":"string"}}},"ReplyView":{"description":"Reply view","required":["replyHandle","commentHandle","topicHandle","createdTime","lastUpdatedTime","user","text","totalLikes","liked"],"type":"object","properties":{"replyHandle":{"description":"Gets or sets reply handle","type":"string"},"commentHandle":{"description":"Gets or sets parent comment handle","type":"string"},"topicHandle":{"description":"Gets or sets root topic handle","type":"string"},"createdTime":{"format":"date-time","description":"Gets or sets created time","type":"string"},"lastUpdatedTime":{"format":"date-time","description":"Gets or sets last updated time","type":"string"},"user":{"$ref":"#/definitions/UserCompactView","description":"Gets or sets owner of the reply"},"text":{"description":"Gets or sets reply text","type":"string"},"language":{"description":"Gets or sets reply language","type":"string"},"totalLikes":{"format":"int64","description":"Gets or sets total likes for the reply","type":"integer"},"liked":{"description":"Gets or sets a value indicating whether the querying user has liked the reply","type":"boolean"},"contentStatus":{"description":"Gets or sets content status","enum":["Active","Banned","Mature","Clean"],"type":"string"}}},"PostReplyRequest":{"description":"Request to post (create) reply","required":["text"],"type":"object","properties":{"text":{"description":"Gets or sets reply text","type":"string"},"language":{"description":"Gets or sets reply language","type":"string"}}},"PostReplyResponse":{"description":"Response from post (create) reply","required":["replyHandle"],"type":"object","properties":{"replyHandle":{"description":"Gets or sets reply handle of the reply","type":"string"}}},"FeedResponse[ReplyView]":{"description":"Feed response","required":["data","cursor"],"type":"object","properties":{"data":{"description":"Gets or sets feed data","type":"array","items":{"$ref":"#/definitions/ReplyView"}},"cursor":{"description":"Gets or sets feed cursor","type":"string"}}},"PostReportRequest":{"description":"Request to post (create) a report for content","required":["reason"],"type":"object","properties":{"reason":{"description":"Gets or sets report reason","enum":["ThreatsCyberbullyingHarassment","ChildEndangermentExploitation","OffensiveContent","VirusSpywareMalware","ContentInfringement","Other","None"],"type":"string"}}},"PostSessionRequest":{"description":"Request to post (create) session","required":["identityProvider","instanceId"],"type":"object","properties":{"identityProvider":{"description":"Gets or sets identity provider type","enum":["Facebook","Microsoft","Google","Twitter","Beihai"],"type":"string"},"accessToken":{"description":"Gets or sets access or authentication token, user code, or verifier obtained from third-party provider.\r\n            The server contacts the third-party provider to use the token (or user code, or verifier) for discover the user's identity.\r\n            For S2S auth, the access token must be set to the user handle","type":"string"},"requestToken":{"description":"Gets or sets request token obtained from third-party provider.\r\n            Some providers do not issue authentication or access tokens, but they issue request tokens\r\n            and verifiers.","type":"string"},"instanceId":{"description":"Gets or sets instance id -- Unique installation id of the app","type":"string"}}},"PostSessionResponse":{"description":"Response from post (create) session","required":["userHandle","sessionToken"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"},"sessionToken":{"description":"Gets or sets session token generated by our server.\r\n            The client saves the session token and sends it with every request","type":"string"}}},"GetRequestTokenResponse":{"description":"Response from get request token response","required":["requestToken"],"type":"object","properties":{"requestToken":{"description":"Gets or sets request token from identity provider","type":"string"}}},"PostFollowerRequest":{"description":"Request to post (accept) a follower","required":["userHandle"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"}}},"PostFollowingRequest":{"description":"Request to post a following (follow user)","required":["userHandle"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"}}},"PostBlockedUserRequest":{"description":"Request to post a blocked user (block user)","required":["userHandle"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"}}},"PostTopicRequest":{"description":"Request to post (create) topic","required":["publisherType","text"],"type":"object","properties":{"publisherType":{"description":"Gets or sets publisher type","enum":["User","App"],"type":"string"},"title":{"description":"Gets or sets topic title","type":"string"},"text":{"description":"Gets or sets topic text","type":"string"},"blobType":{"description":"Gets or sets topic blob type","enum":["Unknown","Image","Video","Custom"],"type":"string"},"blobHandle":{"description":"Gets or sets topic blob handle","type":"string"},"categories":{"description":"Gets or sets topic categories","type":"string"},"language":{"description":"Gets or sets topic language","type":"string"},"deepLink":{"description":"Gets or sets topic deep link","type":"string"},"friendlyName":{"description":"Gets or sets topic friendly name","type":"string"},"group":{"description":"Gets or sets topic group","type":"string"}}},"PostTopicResponse":{"description":"Response from post (create) topic","required":["topicHandle"],"type":"object","properties":{"topicHandle":{"description":"Gets or sets topic handle of the topic","type":"string"}}},"PutTopicRequest":{"description":"Request to put (update) topic","required":["text"],"type":"object","properties":{"title":{"description":"Gets or sets topic title","type":"string"},"text":{"description":"Gets or sets topic text","type":"string"},"categories":{"description":"Gets or sets topic categories","type":"string"}}},"PostTopicNameRequest":{"description":"Post topic name request","required":["publisherType","topicName","topicHandle"],"type":"object","properties":{"publisherType":{"description":"Gets or sets publisher type","enum":["User","App"],"type":"string"},"topicName":{"description":"Gets or sets topic name","type":"string"},"topicHandle":{"description":"Gets or sets topic handle","type":"string"}}},"PutTopicNameRequest":{"description":"Request to put (update) a topic name","required":["publisherType","topicHandle"],"type":"object","properties":{"publisherType":{"description":"Gets or sets publisher type","enum":["User","App"],"type":"string"},"topicHandle":{"description":"Gets or sets topic handle","type":"string"}}},"DeleteTopicNameRequest":{"description":"Request to delete a topic name","required":["publisherType"],"type":"object","properties":{"publisherType":{"description":"Gets or sets publisher type","enum":["User","App"],"type":"string"}}},"GetTopicNameResponse":{"description":"Response from get topic name","required":["topicHandle"],"type":"object","properties":{"topicHandle":{"description":"Gets or sets topic handle of the response","type":"string"}}},"PostLinkedAccountRequest":{"description":"Request to post (create) linked account","required":["identityProvider"],"type":"object","properties":{"identityProvider":{"description":"Gets or sets identity provider type","enum":["Facebook","Microsoft","Google","Twitter","Beihai"],"type":"string"},"accessToken":{"description":"Gets or sets access or authentication token, user code, or verifier obtained from third-party provider.\r\n            The server contacts the third-party provider to use the token (or user code, or verifier) for discover the user's identity.","type":"string"},"requestToken":{"description":"Gets or sets request token obtained from third-party provider.\r\n            Some providers do not issue authentication or access tokens, but they issue request tokens\r\n            and verifiers.","type":"string"}}},"LinkedAccountView":{"description":"Linked account view","required":["identityProvider","accountId"],"type":"object","properties":{"identityProvider":{"description":"Gets or sets identity provider type","enum":["Facebook","Microsoft","Google","Twitter","Beihai"],"type":"string"},"accountId":{"description":"Gets or sets third party account id -- Unique user id provided by the third-party identity provider","type":"string"}}},"PostUserRequest":{"description":"Request to post (create) user","required":["identityProvider","instanceId","firstName","lastName"],"type":"object","properties":{"identityProvider":{"description":"Gets or sets identity provider type","enum":["Facebook","Microsoft","Google","Twitter","Beihai"],"type":"string"},"accessToken":{"description":"Gets or sets access or authentication token obtained from third-party provider.\r\n            The server contacts the third-party provider to validate the token","type":"string"},"requestToken":{"description":"Gets or sets request token obtained from third-party provider.\r\n            Some providers do not issue authentication or access tokens, but they issue request tokens\r\n            and verifiers.","type":"string"},"instanceId":{"description":"Gets or sets instance id -- Unique installation id of the app","type":"string"},"firstName":{"description":"Gets or sets first name of the user","type":"string"},"lastName":{"description":"Gets or sets last name of the user","type":"string"},"bio":{"description":"Gets or sets short bio of the user","type":"string"},"photoHandle":{"description":"Gets or sets photo handle of the user","type":"string"}}},"PostUserResponse":{"description":"Response from post (create) user","required":["userHandle","sessionToken"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"},"sessionToken":{"description":"Gets or sets the session token generated by our server.\r\n            The client saves the session token and sends it with every request","type":"string"}}},"UserProfileView":{"description":"User profile view","required":["userHandle","appHandle","firstName","lastName","bio","photoHandle","photoUrl","visibility","totalTopics","totalFollowers","totalFollowing","followerStatus","followingStatus","profileStatus"],"type":"object","properties":{"userHandle":{"description":"Gets or sets user handle","type":"string"},"appHandle":{"description":"Gets or sets app handle","type":"string"},"firstName":{"description":"Gets or sets first name of the user","type":"string"},"lastName":{"description":"Gets or sets last name of the user","type":"string"},"bio":{"description":"Gets or sets short bio of the user","type":"string"},"photoHandle":{"description":"Gets or sets photo handle of the user","type":"string"},"photoUrl":{"description":"Gets or sets photo url of the user","type":"string"},"visibility":{"description":"Gets or sets visibility of the user","enum":["Public","Private"],"type":"string"},"totalTopics":{"format":"int64","description":"Gets or sets total topics posted by user","type":"integer"},"totalFollowers":{"format":"int64","description":"Gets or sets total followers for the user","type":"integer"},"totalFollowing":{"format":"int64","description":"Gets or sets total following users","type":"integer"},"followerStatus":{"description":"Gets or sets follower relationship status of the querying user","enum":["None","Follow","Pending","Blocked"],"type":"string"},"followingStatus":{"description":"Gets or sets following relationship status of the querying user","enum":["None","Follow","Pending","Blocked"],"type":"string"},"profileStatus":{"description":"Gets or sets user profile status","enum":["Active","Banned","Mature","Clean"],"type":"string"}}},"PutUserInfoRequest":{"description":"Request to put (update) user info","required":["firstName","lastName"],"type":"object","properties":{"firstName":{"description":"Gets or sets first name of the user","type":"string"},"lastName":{"description":"Gets or sets last name of the user","type":"string"},"bio":{"description":"Gets or sets short bio of the user","type":"string"}}},"PutUserPhotoRequest":{"description":"Request to put (update) user photo","type":"object","properties":{"photoHandle":{"description":"Gets or sets photo handle of the user","type":"string"}}},"PutUserVisibilityRequest":{"description":"Request to put (update) user visibility","required":["visibility"],"type":"object","properties":{"visibility":{"description":"Gets or sets visibility of the user","enum":["Public","Private"],"type":"string"}}},"FeedResponse[UserProfileView]":{"description":"Feed response","required":["data","cursor"],"type":"object","properties":{"data":{"description":"Gets or sets feed data","type":"array","items":{"$ref":"#/definitions/UserProfileView"}},"cursor":{"description":"Gets or sets feed cursor","type":"string"}}}}}